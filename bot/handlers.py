import logging
from aiogram import Dispatcher
from aiogram.types import Message
from aiogram.filters import Command
from llm.client import get_llm_response
from llm.prompts import get_system_prompt, get_base_system_prompt
from llm.memory import add_message_to_dialog, get_dialog_history, clear_dialog_history
from llm.services import get_all_services, get_company_info

logger = logging.getLogger(__name__)

async def cmd_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    chat_id = message.chat.id
    user_id = message.from_user.id if message.from_user else "unknown"
    user_name = message.from_user.full_name if message.from_user else "Unknown"
    logger.info(f"üöÄ START COMMAND | Chat: {chat_id} | User: {user_name} ({user_id})")
    
    # –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    clear_dialog_history(chat_id)
    
    company_info = get_company_info()
    company_name = company_info.get('name', 'Sign Language Interface')
    
    welcome_message = "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ " + company_name + "!\n\n"
    welcome_message += "–Ø ‚Äî –≤–∞—à –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ —Ä–µ—à–µ–Ω–∏—è–º –≤ –æ–±–ª–∞—Å—Ç–∏ –∂–µ—Å—Ç–æ–≤–æ–≥–æ —è–∑—ã–∫–∞ –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –∂–µ—Å—Ç–æ–≤. "
    welcome_message += "–ù–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –¥–ª—è –ª—é–¥–µ–π, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏—Ö –∂–µ—Å—Ç–æ–≤—ã–µ —è–∑—ã–∫–∏.\n\n"
    welcome_message += "üîß **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n"
    welcome_message += "/services ‚Äî –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –Ω–∞—à–∏ —É—Å–ª—É–≥–∏\n"
    welcome_message += "/help ‚Äî –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞\n"
    welcome_message += "/contact ‚Äî –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n\n"
    welcome_message += "üí¨ **–ö–∞–∫ –Ω–∞—á–∞—Ç—å:**\n"
    welcome_message += "–ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∑–∞–¥–∞—á—É –∏–ª–∏ –ø—Ä–æ–µ–∫—Ç, –∏ —è –ø–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ä–µ—à–µ–Ω–∏—è –∏–∑ –Ω–∞—à–µ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è —É—Å–ª—É–≥.\n\n"
    welcome_message += "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –≤ –æ–±–ª–∞—Å—Ç–∏ –∂–µ—Å—Ç–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π?"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
    add_message_to_dialog(chat_id, "assistant", welcome_message)
    
    await message.answer(welcome_message)

async def cmd_services(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /services"""
    chat_id = message.chat.id
    user_id = message.from_user.id if message.from_user else "unknown"
    user_name = message.from_user.full_name if message.from_user else "Unknown"
    logger.info(f"üîß SERVICES COMMAND | Chat: {chat_id} | User: {user_name} ({user_id})")
    
    services = get_all_services()
    company_info = get_company_info()
    company_name = company_info.get('name', 'Sign Language Interface')
    
    services_message = "üöÄ **–£—Å–ª—É–≥–∏ " + company_name + "**\n\n"
    
    for service_key, service_info in services.items():
        services_message += "**" + service_info['name'] + "** (" + service_info['type'] + ")\n"
        services_message += "üìù " + service_info['description'] + "\n"
        services_message += "üë• –î–ª—è: " + service_info['target_audience'] + "\n\n"
    
    website = company_info.get('website', '')
    services_message += "üí° –ü–æ–¥—Ä–æ–±–Ω–µ–µ: " + website + "\n"
    services_message += "üí¨ –ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –æ –≤–∞—à–µ–º –ø—Ä–æ–µ–∫—Ç–µ, –∏ —è –ø–æ–¥–±–µ—Ä—É –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ä–µ—à–µ–Ω–∏—è!"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
    add_message_to_dialog(chat_id, "user", "/services")
    add_message_to_dialog(chat_id, "assistant", services_message)
    
    logger.info(f"üì§ SERVICES RESPONSE | Chat: {chat_id} | Length: {len(services_message)} chars")
    await message.answer(services_message)

async def cmd_help(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    chat_id = message.chat.id
    user_id = message.from_user.id if message.from_user else "unknown"
    user_name = message.from_user.full_name if message.from_user else "Unknown"
    logger.info(f"‚ùì HELP COMMAND | Chat: {chat_id} | User: {user_name} ({user_id})")
    
    help_message = "üìñ **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞**\n\n"
    help_message += "ü§ñ **–ß—Ç–æ —è —É–º–µ—é:**\n"
    help_message += "‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —É—Å–ª—É–≥–∞–º –≤ –æ–±–ª–∞—Å—Ç–∏ –∂–µ—Å—Ç–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π\n"
    help_message += "‚Ä¢ –ü–æ–¥–±–∏—Ä–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ä–µ—à–µ–Ω–∏—è –ø–æ–¥ –≤–∞—à –ø—Ä–æ–µ–∫—Ç\n"
    help_message += "‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –Ω–∞—à–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–∞—Ö\n"
    help_message += "‚Ä¢ –ü–æ–º–æ–≥–∞—Ç—å —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏\n\n"
    help_message += "üìã **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n"
    help_message += "/start ‚Äî –ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞\n"
    help_message += "/services ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —É—Å–ª—É–≥–∏\n"
    help_message += "/help ‚Äî –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
    help_message += "/contact ‚Äî –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n\n"
    help_message += "üí° **–ö–∞–∫ –æ–±—â–∞—Ç—å—Å—è:**\n"
    help_message += "–ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –æ–±—ã—á–Ω—ã–º —è–∑—ã–∫–æ–º! –ù–∞–ø—Ä–∏–º–µ—Ä:\n"
    help_message += "‚Ä¢ \"–ù—É–∂–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –∂–µ—Å—Ç–æ–≤\"\n"
    help_message += "‚Ä¢ \"–•–æ—á—É –æ–±—É—á–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∂–µ—Å—Ç–æ–≤–æ–º—É —è–∑—ã–∫—É\"\n"
    help_message += "‚Ä¢ \"–ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –ø–µ—Ä–µ–≤–æ–¥ —Å –∂–µ—Å—Ç–æ–≤–æ–≥–æ –Ω–∞ —É—Å—Ç–Ω—ã–π —è–∑—ã–∫\"\n\n"
    help_message += "–Ø –∑–∞–ø–æ–º–∏–Ω–∞—é –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–∞—à–µ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –∏ –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã."
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
    add_message_to_dialog(chat_id, "user", "/help")
    add_message_to_dialog(chat_id, "assistant", help_message)
    
    logger.info(f"üì§ HELP RESPONSE | Chat: {chat_id} | Length: {len(help_message)} chars")
    await message.answer(help_message)

async def cmd_contact(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /contact"""
    chat_id = message.chat.id
    user_id = message.from_user.id if message.from_user else "unknown"
    user_name = message.from_user.full_name if message.from_user else "Unknown"
    logger.info(f"üìû CONTACT COMMAND | Chat: {chat_id} | User: {user_name} ({user_id})")
    
    company_info = get_company_info()
    company_name = company_info.get('name', 'Sign Language Interface')
    website = company_info.get('website', '')
    mission = company_info.get('mission', '')
    
    contact_message = "üìû **–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è**\n\n"
    contact_message += "üè¢ **" + company_name + "**\n"
    contact_message += "üåê –í–µ–±-—Å–∞–π—Ç: " + website + "\n\n"
    contact_message += "üéØ **–ù–∞—à–∞ –º–∏—Å—Å–∏—è:**\n"
    contact_message += mission + "\n\n"
    contact_message += "üìß **–î–ª—è –¥–µ–ª–æ–≤—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π:**\n"
    contact_message += "–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–±—Å—É–¥–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –¥–µ—Ç–∞–ª—å–Ω–æ –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, "
    contact_message += "—Ä–µ–∫–æ–º–µ–Ω–¥—É—é —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–æ–π —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç.\n\n"
    contact_message += "üí¨ **–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤ —á–∞—Ç–µ:**\n"
    contact_message += "–Ø –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –ø—Ä—è–º–æ –∑–¥–µ—Å—å!"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
    add_message_to_dialog(chat_id, "user", "/contact")
    add_message_to_dialog(chat_id, "assistant", contact_message)
    
    logger.info(f"üì§ CONTACT RESPONSE | Chat: {chat_id} | Length: {len(contact_message)} chars")
    await message.answer(contact_message)

async def handle_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ LLM —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"""
    try:
        chat_id = message.chat.id
        user_id = message.from_user.id if message.from_user else "unknown"
        user_name = message.from_user.full_name if message.from_user else "Unknown"
        user_message = message.text or ""
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø—É—Å—Ç–æ–µ
        if not user_message.strip():
            logger.warning(f"‚ö†Ô∏è EMPTY MESSAGE | Chat: {chat_id} | User: {user_name} ({user_id})")
            await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
            return
        
        # –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        logger.info(f"üì® USER MESSAGE | Chat: {chat_id} | User: {user_name} ({user_id})")
        logger.info(f"üìù Content: {user_message}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
        add_message_to_dialog(chat_id, "user", user_message)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π)
        history = get_dialog_history(chat_id, max_messages=10)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å —É—á–µ—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        system_prompt = get_system_prompt(user_message)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ LLM —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º —Å–∏—Å—Ç–µ–º–Ω—ã–º –ø—Ä–æ–º–ø—Ç–æ–º –∏ –∏—Å—Ç–æ—Ä–∏–µ–π
        messages = [{"role": "system", "content": system_prompt}] + history
        
        logger.info(f"üß† LLM REQUEST | Chat: {chat_id} | Messages: {len(messages)} (system + {len(history)} history)")
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç LLM
        response = await get_llm_response(messages)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
        add_message_to_dialog(chat_id, "assistant", response)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await message.answer(response)
        
        # –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
        logger.info(f"ü§ñ BOT RESPONSE | Chat: {chat_id} | Length: {len(response)} chars")
        logger.info(f"üì§ Content: {response}")
        
    except Exception as e:
        error_msg = f"‚ùå ERROR | Chat: {chat_id} | Error: {str(e)}"
        logger.error(error_msg)
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

def setup_handlers(dp: Dispatcher):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    dp.message.register(cmd_start, Command("start"))
    dp.message.register(cmd_services, Command("services"))
    dp.message.register(cmd_help, Command("help"))
    dp.message.register(cmd_contact, Command("contact"))
    dp.message.register(handle_message) 